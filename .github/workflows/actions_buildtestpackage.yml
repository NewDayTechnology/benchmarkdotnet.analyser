name: Build Test and Package

on:
  push:    
  pull_request:
    branches: [ main ]

jobs:
  Build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    
    - name: Restore tools
      run: dotnet tool restore 
    
    - name: Build test and package
      run: dotnet fake run FakeBuild.fsx        
    
    - name: Archive dotnet tool nupkg
      uses: actions/upload-artifact@v2
      with:
        name: benchmarkdotnet.analyser.nupkg
        path: ./publish/toolpackage/*
    
    - name: Archive Test results
      uses: actions/upload-artifact@v2
      with:
        name: tests.results
        path: |
          ./test/**/TestResults/*
          ./test/BenchmarkDotNetAnalyser.Tests.Integration/**/BDDfy.html
    
    - name: Archive Code coverage
      uses: actions/upload-artifact@v2
      with:
        name: codecoverage
        path: ./publish/codecoverage/*.html
    
    - name: Archive Stryker results
      uses: actions/upload-artifact@v2
      with:
        name: stryker.results
        path: ./publish/stryker/*
    
    - name: Unit tests
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Unit tests
        path: ${{ github.workspace }}/test/BenchmarkDotNetAnalyser.Tests.Unit/TestResults/test_results.trx
        reporter: dotnet-trx
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Integration tests
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Integration tests
        path: ${{ github.workspace }}/test/BenchmarkDotNetAnalyser.Tests.Integration/TestResults/test_results.trx
        reporter: dotnet-trx
        token: ${{ secrets.GITHUB_TOKEN }}

  Release:
    runs-on: ubuntu-latest
    needs:   [ Build ]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
        
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Download package
      uses: actions/download-artifact@v2
      with:
        name: benchmarkdotnet.analyser.nupkg
        path: ${{ github.workspace }}/artifacts

    - name: Setup nuget source
      run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/NewDayTechnology/index.json"

    - name: Push nuget package
      run: dotnet nuget push "artifacts/*.nupkg"  --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
